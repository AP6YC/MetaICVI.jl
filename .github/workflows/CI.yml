name: CI
on:
  push:
    branches: [main]
    tags: ["*"]
  pull_request:
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - "1.6"  # LTS
          - "1"    # Latest Release
          # - 'nightly'
        os:
          - ubuntu-latest
          # - windows-latest
        arch:
          - x64
          # - x86
    steps:
      # Cancel ongoing tests if pushing to branch again before the previous
      # build is finished.
      - name: Cancel ongoing tests for previous commits
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ github.token }}

      # Checkout the code
      - uses: actions/checkout@v3
      # Setup python dependencies
      - name: Install scikit-learn
        run: |
          python -m pip install --upgrade pip
          pip install -U scikit-learn
      # Setup julia
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      # Setup the julia cache location
      - uses: actions/cache@v3
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      # Build the package
      - uses: julia-actions/julia-buildpkg@v1
      # Run the unit tests
      - uses: julia-actions/julia-runtest@v1
      # Get the coverage from the unit tests
      - uses: julia-actions/julia-processcoverage@v1
      # Give codecov the coverage report
      - uses: codecov/codecov-action@v3
        with:
          file: lcov.info

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: lcov.info

  # docs:
  #   name: Documentation
  #   runs-on: ubuntu-latest
  #   steps:
  #     # Checkout the code
  #     - uses: actions/checkout@v2
  #     # Setup python dependencies
  #     - name: Install scikit-learn
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -U scikit-learn
  #     # Setup julia with the latest version
  #     - uses: julia-actions/setup-julia@v1
  #       with:
  #         version: '1'
  #     # Setup the docs julia directory
  #     - run: |
  #         julia --project=docs -e '
  #           using Pkg
  #           Pkg.develop(PackageSpec(path=pwd()))
  #           Pkg.instantiate()'
  #     # Run the doctests
  #     - run: |
  #         julia --project=docs -e '
  #           using Documenter: DocMeta, doctest
  #           using MetaICVI
  #           DocMeta.setdocmeta!(MetaICVI, :DocTestSetup, :(using MetaICVI); recursive=true)
  #           doctest(MetaICVI)'
  #     # Make the documentation, pointing to the correct keys for uploading
  #     - run: julia --project=docs docs/make.jl
  #       env:
  #         JULIA_PKG_SERVER: ""
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
